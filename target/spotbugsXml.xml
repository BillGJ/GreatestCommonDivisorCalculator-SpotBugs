<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1660355808411' version='4.7.1' timestamp='1658972239321'><Project projectName='greatest-common-divisor'><Jar>C:\Users\ebill\Desktop\UDACITY-CitiScholarship\WebProgramming-Nanodegree(Citi)\7-JavaApplicationDeployment\Lesson3-DependencyManagementWithMaven\starter-spotBugs-exercise\greatest-common-divisor\target\classes</Jar><SrcDir>C:\Users\ebill\Desktop\UDACITY-CitiScholarship\WebProgramming-Nanodegree(Citi)\7-JavaApplicationDeployment\Lesson3-DependencyManagementWithMaven\starter-spotBugs-exercise\greatest-common-divisor\src\main\java</SrcDir><WrkDir>C:\Users\ebill\Desktop\UDACITY-CitiScholarship\WebProgramming-Nanodegree(Citi)\7-JavaApplicationDeployment\Lesson3-DependencyManagementWithMaven\starter-spotBugs-exercise\greatest-common-divisor\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='59906b8c977a7fa94d4ae65ff25cf96' rank='14' abbrev='HE' category='BAD_PRACTICE' priority='1' type='HE_EQUALS_USE_HASHCODE' instanceOccurrenceMax='0'><ShortMessage>Class defines equals() and uses Object.hashCode()</ShortMessage><LongMessage>com.udacity.spotbugs.SpotBugsErrors defines equals and uses Object.hashCode()</LongMessage><Class classname='com.udacity.spotbugs.SpotBugsErrors' primary='true'><SourceLine classname='com.udacity.spotbugs.SpotBugsErrors' start='6' end='31' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java'><Message>At SpotBugsErrors.java:[lines 6-31]</Message></SourceLine><Message>In class com.udacity.spotbugs.SpotBugsErrors</Message></Class><Method isStatic='false' classname='com.udacity.spotbugs.SpotBugsErrors' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='161' classname='com.udacity.spotbugs.SpotBugsErrors' start='27' end='30' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'></SourceLine><Message>In method com.udacity.spotbugs.SpotBugsErrors.equals(Object)</Message></Method><SourceLine synthetic='true' endBytecode='161' classname='com.udacity.spotbugs.SpotBugsErrors' start='27' end='30' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'><Message>At SpotBugsErrors.java:[lines 27-30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b8ccfd08f4646cb64dbff3e4588c2380' rank='18' abbrev='SBSC' category='PERFORMANCE' priority='2' type='SBSC_USE_STRINGBUFFER_CONCATENATION' instanceOccurrenceMax='0'><ShortMessage>Method concatenates strings using + in a loop</ShortMessage><LongMessage>com.udacity.spotbugs.SpotBugsErrors.method() concatenates strings using + in a loop</LongMessage><Class classname='com.udacity.spotbugs.SpotBugsErrors' primary='true'><SourceLine classname='com.udacity.spotbugs.SpotBugsErrors' start='6' end='31' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java'><Message>At SpotBugsErrors.java:[lines 6-31]</Message></SourceLine><Message>In class com.udacity.spotbugs.SpotBugsErrors</Message></Class><Method isStatic='false' classname='com.udacity.spotbugs.SpotBugsErrors' signature='()V' name='method' primary='true'><SourceLine endBytecode='208' classname='com.udacity.spotbugs.SpotBugsErrors' start='14' end='23' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='0'></SourceLine><Message>In method com.udacity.spotbugs.SpotBugsErrors.method()</Message></Method><SourceLine endBytecode='29' classname='com.udacity.spotbugs.SpotBugsErrors' start='19' end='19' sourcepath='com/udacity/spotbugs/SpotBugsErrors.java' sourcefile='SpotBugsErrors.java' startBytecode='29' primary='true'><Message>At SpotBugsErrors.java:[line 19]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='SBSC' category='PERFORMANCE' type='SBSC_USE_STRINGBUFFER_CONCATENATION'><ShortDescription>Method concatenates strings using + in a loop</ShortDescription><Details>

&lt;p&gt; The method seems to be building a String using concatenation in a loop.
In each iteration, the String is converted to a StringBuffer/StringBuilder,
   appended to, and converted back to a String.
   This can lead to a cost quadratic in the number of iterations,
   as the growing string is recopied in each iteration. &lt;/p&gt;

&lt;p&gt;Better performance can be obtained by using
a StringBuffer (or StringBuilder in Java 5) explicitly.&lt;/p&gt;

&lt;p&gt; For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// This is bad
String s = "";
for (int i = 0; i &amp;lt; field.length; ++i) {
    s = s + field[i];
}

// This is better
StringBuffer buf = new StringBuffer();
for (int i = 0; i &amp;lt; field.length; ++i) {
    buf.append(field[i]);
}
String s = buf.toString();
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugPattern abbrev='HE' category='BAD_PRACTICE' type='HE_EQUALS_USE_HASHCODE'><ShortDescription>Class defines equals() and uses Object.hashCode()</ShortDescription><Details>

  &lt;p&gt; This class overrides &lt;code&gt;equals(Object)&lt;/code&gt;, but does not
  override &lt;code&gt;hashCode()&lt;/code&gt;, and inherits the implementation of
  &lt;code&gt;hashCode()&lt;/code&gt; from &lt;code&gt;java.lang.Object&lt;/code&gt; (which returns
  the identity hash code, an arbitrary value assigned to the object
  by the VM).&amp;nbsp; Therefore, the class is very likely to violate the
  invariant that equal objects must have equal hashcodes.&lt;/p&gt;

&lt;p&gt;If you don't think instances of this class will ever be inserted into a HashMap/HashTable,
the recommended &lt;code&gt;hashCode&lt;/code&gt; implementation to use is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public int hashCode() {
    assert false : "hashCode not designed";
    return 42; // any arbitrary constant will do
}
&lt;/code&gt;&lt;/pre&gt;

    </Details></BugPattern><BugCode abbrev='SBSC'><Description>String concatenation in loop using + operator</Description></BugCode><BugCode abbrev='HE'><Description>Equal objects must have equal hashcodes</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='3' total_classes='3' priority_1='1' priority_2='1' total_size='32' clock_seconds='2.12' referenced_classes='19' vm_version='17.0.4+11-LTS-179' total_bugs='2' java_version='17.0.4' gc_seconds='0.01' alloc_mbytes='512.00' cpu_seconds='8.88' peak_mbytes='197.69' timestamp='Wed, 27 Jul 2022 21:37:19 -0400'><FileStats path='com/udacity/App.java' size='6' bugCount='0'></FileStats><FileStats path='com/udacity/gcd/GreatestCommonDivisorCalculator.java' size='7' bugCount='0'></FileStats><FileStats path='com/udacity/spotbugs/SpotBugsErrors.java' size='19' bugHash='8e64479609d8b49d557ec09f664796e3' bugCount='2'></FileStats><PackageStats package='com.udacity' total_bugs='0' total_size='6' total_types='1'><ClassStats bugs='0' size='6' interface='false' sourceFile='App.java' class='com.udacity.App'></ClassStats></PackageStats><PackageStats package='com.udacity.gcd' total_bugs='0' total_size='7' total_types='1'><ClassStats bugs='0' size='7' interface='false' sourceFile='GreatestCommonDivisorCalculator.java' class='com.udacity.gcd.GreatestCommonDivisorCalculator'></ClassStats></PackageStats><PackageStats package='com.udacity.spotbugs' priority_1='1' total_bugs='2' priority_2='1' total_size='19' total_types='1'><ClassStats bugs='2' size='19' priority_1='1' priority_2='1' interface='false' sourceFile='SpotBugsErrors.java' class='com.udacity.spotbugs.SpotBugsErrors'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1207' totalMilliseconds='505' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='25983' standardDeviationMicrosecondsPerInvocation='2476' invocations='419'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='481' totalMilliseconds='202' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='6145' standardDeviationMicrosecondsPerInvocation='479' invocations='421'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='7029' totalMilliseconds='133' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='36787' standardDeviationMicrosecondsPerInvocation='10503' invocations='19'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1072' totalMilliseconds='85' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='8441' standardDeviationMicrosecondsPerInvocation='1286' invocations='80'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3057' totalMilliseconds='58' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='17972' standardDeviationMicrosecondsPerInvocation='4293' invocations='19'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='128' totalMilliseconds='49' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1667' standardDeviationMicrosecondsPerInvocation='204' invocations='386'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1081' totalMilliseconds='42' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='16696' standardDeviationMicrosecondsPerInvocation='2776' invocations='39'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='6017' totalMilliseconds='42' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='39220' standardDeviationMicrosecondsPerInvocation='13559' invocations='7'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2176' totalMilliseconds='41' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='18675' standardDeviationMicrosecondsPerInvocation='4185' invocations='19'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1792' totalMilliseconds='34' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='11458' standardDeviationMicrosecondsPerInvocation='3053' invocations='19'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1438' totalMilliseconds='27' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='12914' standardDeviationMicrosecondsPerInvocation='2938' invocations='19'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>